// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LiquidityPoolActivated extends ethereum.Event {
  get params(): LiquidityPoolActivated__Params {
    return new LiquidityPoolActivated__Params(this);
  }
}

export class LiquidityPoolActivated__Params {
  _event: LiquidityPoolActivated;

  constructor(event: LiquidityPoolActivated) {
    this._event = event;
  }

  get liquidityPoolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LiquidityPoolAdded extends ethereum.Event {
  get params(): LiquidityPoolAdded__Params {
    return new LiquidityPoolAdded__Params(this);
  }
}

export class LiquidityPoolAdded__Params {
  _event: LiquidityPoolAdded;

  constructor(event: LiquidityPoolAdded) {
    this._event = event;
  }

  get liquidityPoolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get liquidityPoolKind(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class LiquidityPoolRemoved extends ethereum.Event {
  get params(): LiquidityPoolRemoved__Params {
    return new LiquidityPoolRemoved__Params(this);
  }
}

export class LiquidityPoolRemoved__Params {
  _event: LiquidityPoolRemoved;

  constructor(event: LiquidityPoolRemoved) {
    this._event = event;
  }

  get liquidityPoolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StateUpdated extends ethereum.Event {
  get params(): StateUpdated__Params {
    return new StateUpdated__Params(this);
  }
}

export class StateUpdated__Params {
  _event: StateUpdated;

  constructor(event: StateUpdated) {
    this._event = event;
  }

  get newState(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class DEX extends ethereum.SmartContract {
  static bind(address: Address): DEX {
    return new DEX("DEX", address);
  }

  getState(): i32 {
    let result = super.call("getState", "getState():(uint8)", []);

    return result[0].toI32();
  }

  try_getState(): ethereum.CallResult<i32> {
    let result = super.tryCall("getState", "getState():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getStatus(liquidityPoolAddress: Address): boolean {
    let result = super.call("getStatus", "getStatus(address):(bool)", [
      ethereum.Value.fromAddress(liquidityPoolAddress)
    ]);

    return result[0].toBoolean();
  }

  try_getStatus(liquidityPoolAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("getStatus", "getStatus(address):(bool)", [
      ethereum.Value.fromAddress(liquidityPoolAddress)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getVersion(): BigInt {
    let result = super.call("getVersion", "getVersion():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getVersion", "getVersion():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateLiquidityPoolCall extends ethereum.Call {
  get inputs(): ActivateLiquidityPoolCall__Inputs {
    return new ActivateLiquidityPoolCall__Inputs(this);
  }

  get outputs(): ActivateLiquidityPoolCall__Outputs {
    return new ActivateLiquidityPoolCall__Outputs(this);
  }
}

export class ActivateLiquidityPoolCall__Inputs {
  _call: ActivateLiquidityPoolCall;

  constructor(call: ActivateLiquidityPoolCall) {
    this._call = call;
  }

  get liquidityPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ActivateLiquidityPoolCall__Outputs {
  _call: ActivateLiquidityPoolCall;

  constructor(call: ActivateLiquidityPoolCall) {
    this._call = call;
  }
}

export class AddNativeLiquidityPoolCall extends ethereum.Call {
  get inputs(): AddNativeLiquidityPoolCall__Inputs {
    return new AddNativeLiquidityPoolCall__Inputs(this);
  }

  get outputs(): AddNativeLiquidityPoolCall__Outputs {
    return new AddNativeLiquidityPoolCall__Outputs(this);
  }
}

export class AddNativeLiquidityPoolCall__Inputs {
  _call: AddNativeLiquidityPoolCall;

  constructor(call: AddNativeLiquidityPoolCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get swapFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get tokenDeposit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddNativeLiquidityPoolCall__Outputs {
  _call: AddNativeLiquidityPoolCall;

  constructor(call: AddNativeLiquidityPoolCall) {
    this._call = call;
  }
}

export class AddTokenLiquidityPoolCall extends ethereum.Call {
  get inputs(): AddTokenLiquidityPoolCall__Inputs {
    return new AddTokenLiquidityPoolCall__Inputs(this);
  }

  get outputs(): AddTokenLiquidityPoolCall__Outputs {
    return new AddTokenLiquidityPoolCall__Outputs(this);
  }
}

export class AddTokenLiquidityPoolCall__Inputs {
  _call: AddTokenLiquidityPoolCall;

  constructor(call: AddTokenLiquidityPoolCall) {
    this._call = call;
  }

  get xAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get yAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get swapFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get xDeposit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get yDeposit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddTokenLiquidityPoolCall__Outputs {
  _call: AddTokenLiquidityPoolCall;

  constructor(call: AddTokenLiquidityPoolCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RemoveLiquidityPoolCall extends ethereum.Call {
  get inputs(): RemoveLiquidityPoolCall__Inputs {
    return new RemoveLiquidityPoolCall__Inputs(this);
  }

  get outputs(): RemoveLiquidityPoolCall__Outputs {
    return new RemoveLiquidityPoolCall__Outputs(this);
  }
}

export class RemoveLiquidityPoolCall__Inputs {
  _call: RemoveLiquidityPoolCall;

  constructor(call: RemoveLiquidityPoolCall) {
    this._call = call;
  }

  get liquidityPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveLiquidityPoolCall__Outputs {
  _call: RemoveLiquidityPoolCall;

  constructor(call: RemoveLiquidityPoolCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetStateCall extends ethereum.Call {
  get inputs(): SetStateCall__Inputs {
    return new SetStateCall__Inputs(this);
  }

  get outputs(): SetStateCall__Outputs {
    return new SetStateCall__Outputs(this);
  }
}

export class SetStateCall__Inputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }

  get newState(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetStateCall__Outputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }
}

export class SwapAtCall extends ethereum.Call {
  get inputs(): SwapAtCall__Inputs {
    return new SwapAtCall__Inputs(this);
  }

  get outputs(): SwapAtCall__Outputs {
    return new SwapAtCall__Outputs(this);
  }
}

export class SwapAtCall__Inputs {
  _call: SwapAtCall;

  constructor(call: SwapAtCall) {
    this._call = call;
  }

  get liquidityPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SwapAtCall__Outputs {
  _call: SwapAtCall;

  constructor(call: SwapAtCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
